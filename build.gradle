buildscript {
    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/content/aalmiray/kordamp' }
        maven { url  'http://dl.bintray.com/melix/jbake-gradle-plugin' }
        mavenLocal()
    }
    dependencies {
        classpath 'org.kordamp:markdown-gradle-plugin:0.1.1'
        classpath 'me.champeau.gradle:jbake-gradle-plugin:0.1'
        classpath 'org.freemarker:freemarker:2.3.19'
    }
}

apply plugin: 'java'
apply plugin: 'org.kordamp.gradle.markdown'
apply plugin: 'jbake'

def arc42InputDir = 'src/arc42-markdown/'
def jbakeDir = 'src/jbake/'

repositories {
    mavenCentral()
}

dependencies {
    compile 'net.sourceforge.plantuml:plantuml:8020'
}

task generatePlantumlImages(type: JavaExec) {
    main 'net.sourceforge.plantuml.Run'
    classpath configurations.runtime
//    environment GRAPHVIZ_DOT: '/path/to/dot'
    args arc42InputDir + '**/*.puml'
}

task addPagesToSearch(type: Copy) {
    from 'src/assets/'
    into jbakeDir + 'assets/js/'
    include 'arcdoc.js'
    filter { line ->
        def pages = ''

        fileTree(dir: arc42InputDir, include: '**/*.md').each {
            def path = it.path
            def startIndex = path.indexOf(arc42InputDir) + arc42InputDir.length()
            def page = path.getAt(startIndex..-3) + "html"

            pages += '"' + page + '", '
        }

        line.replaceAll('/\\* DO NOT REMOVE, WILL BE FILLED BY GRADLE \\*/', pages[0..-3])
    }
}

task copyMarkdown(type: Copy) {
    from arc42InputDir
    into jbakeDir + 'content/'
    include '**/*.md'
    filter { line ->
        line.replaceAll(/\[(.*)\]\((.*)(\.md)(.*)\)/) { all, caption, preSuffix, suffix, postSuffix ->
            "[${caption}](${preSuffix}.html${postSuffix})"
        }
    }
}

task copyGraphics(type: Copy) {
    from arc42InputDir
    into jbakeDir + 'assets/'
    include '**/*.png'
    includeEmptyDirs = false
}

defaultTasks 'generatePlantumlImages', 'addPagesToSearch', 'copyMarkdown', 'copyGraphics', 'jbake'